# template for data processing plugin
x-data-processing-plugin: &data-processing-plugin
  image: ghcr.io/fasten-project/data-processing:0.0.18
  restart: "unless-stopped"
  depends_on: [ "kafka", "metadata-db" ]
  environment:
    PG_PWD: ${DB_PWD}

services:

  ## INFRASTRUCTURE

  kafka:
    image: docker.io/bitnami/kafka:3.5.1
    restart: unless-stopped
    ports:
      - 9092:9092
    volumes: [
      "./volumes/kafka:/bitnami/kafka"
    ]
    environment:
      # Kraft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Custom ... (start with KAFKA_CFG_)
      # allows balanced configs with 1/2/3/4/6/12 clients
      - KAFKA_CFG_NUM_PARTITIONS=12
      # optimize timeouts to avoid frequent rebalancing
      - KAFKA_CFG_GROUP_CONSUMER_MAX_SESSION_TIMEOUT_MS=1800000
      - KAFKA_CFG_GROUP_CONSUMER_SESSION_TIMEOUT_MS=1800000
      - KAFKA_CFG_GROUP_CONSUMER_MAX_POLL_INTERVAL_MS=900000
      - KAFKA_CFG_GROUP_CONSUMER_MAX_HEARTBEAT_INTERVAL_MS=600000
      - KAFKA_CFG_GROUP_CONSUMER_HEARTBEAT_INTERVAL_MS=600000
      # required to avoid message deletion
      - KAFKA_CFG_LOG_RETENTION_HOURS=-1

  kafdrop:
    #profiles: ["disabled"]
    image: obsidiandynamics/kafdrop
    restart: "unless-stopped"
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka

  metadata-db:
    build:
      context: metadata-db
      dockerfile: Dockerfile
    restart: "unless-stopped"
    environment:
      POSTGRES_PASSWORD: fasten1234
    ports: [ 5432:5432 ]
    volumes: [
      "./volumes/metadata-db/data:/var/lib/postgresql/data"
    ]

  ## FASTEN SERVICES

  easy-index:
    #profiles: ["disabled"]
    image: ghcr.io/cops-lab/maven-easy-index:0.0.2
    restart: "unless-stopped"
    volumes: [
      "./caches/easy-index/:/cache"
    ]

  maven-crawler:
    <<: *data-processing-plugin
      #profiles: ["disabled"]
    volumes: [
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.mavencrawler.Main",
      "--mc.easyIndexUrl", "http://easy-index:8080/",
      "--mc.firstConsideredIndex", "323",
      "--instanceId", "mc1",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}",
      "--db.url", "${DB_URL}",
      "--db.user", "${DB_USER}"
    ]

  pom-analyzer1:
    <<: *data-processing-plugin
    #profiles: ["disabled"]
    volumes: [
      "./caches/.m2/:/root/.m2",
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.pomanalyzer.Main",
      "--instanceId", "pa1",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}",
      "--db.url", "${DB_URL}",
      "--db.user", "${DB_USER}"
    ]

  pom-analyzer2:
    <<: *data-processing-plugin
    #profiles: ["disabled"]
    volumes: [
      "./caches/.m2/:/root/.m2",
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.pomanalyzer.Main",
      "--instanceId", "pa2",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}",
      "--db.url", "${DB_URL}",
      "--db.user", "${DB_USER}"
    ]

  pom-analyzer3:
    <<: *data-processing-plugin
      #profiles: ["disabled"]
    volumes: [
      "./caches/.m2/:/root/.m2",
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.pomanalyzer.Main",
      "--instanceId", "pa3",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}",
      "--db.url", "${DB_URL}",
      "--db.user", "${DB_USER}"
    ]

  pom-analyzer4:
    <<: *data-processing-plugin
    profiles: ["disabled"]
    volumes: [
      "./caches/.m2/:/root/.m2",
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.pomanalyzer.Main",
      "--instanceId", "pa4",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}",
      "--db.url", "${DB_URL}",
      "--db.user", "${DB_USER}"
    ]

  pom-analyzer5:
    <<: *data-processing-plugin
    profiles: ["disabled"]
    volumes: [
      "./caches/.m2/:/root/.m2",
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.pomanalyzer.Main",
      "--instanceId", "pa5",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}",
      "--db.url", "${DB_URL}",
      "--db.user", "${DB_USER}"
    ]

  pom-analyzer6:
    <<: *data-processing-plugin
    profiles: ["disabled"]
    volumes: [
      "./caches/.m2/:/root/.m2",
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.pomanalyzer.Main",
      "--instanceId", "pa6",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}",
      "--db.url", "${DB_URL}",
      "--db.user", "${DB_USER}"
    ]

  dep-graph-resolver:
    <<: *data-processing-plugin
    profiles: ["disabled"]
    volumes: [
      "./volumes/:/data/"
    ]
    command: [
      "--run", "eu.f4sten.depgraph.Main",
      "--instanceId", "dg1",
      # default values:
      "--baseDir", "/data",
      "--kafka.url", "${KAFKA_URL}"
    ]
    ports:
      - "18081:8080"

